{"version":3,"sources":["webpack://knwch-portfolio/./node_modules/framer-motion/dist/es/components/LazyMotion/index.js","webpack://knwch-portfolio/./node_modules/framer-motion/dist/es/render/dom/features-animation.js","webpack://knwch-portfolio/./src/components/resume.js","webpack://knwch-portfolio/./src/pages/resume.js"],"names":["LazyMotion","_a","children","features","_b","strict","setIsLoaded","useState","isLazyBundle","loadedRenderer","useRef","undefined","renderer","loadedFeatures","current","useEffect","then","value","domAnimation","Box","display","className","justifyContent","alignItems"],"mappings":"mMAyCA,SAASA,EAAWC,GAClB,IAAIC,EAAWD,EAAGC,SACdC,EAAWF,EAAGE,SACdC,EAAKH,EAAGI,OACRA,OAAgB,IAAPD,GAAwBA,EAGjCE,GADK,SAAO,IAAAC,WAAUC,EAAaL,IAAY,GAC9B,GAEjBM,GAAiB,IAAAC,aAAOC,GAK5B,IAAKH,EAAaL,GAAW,CAC3B,IAAIS,EAAWT,EAASS,SACpBC,GAAiB,QAAOV,EAAU,CAAC,aAEvCM,EAAeK,QAAUF,GACzB,OAAaC,GAef,OAZA,IAAAE,YAAU,WACJP,EAAaL,IACfA,IAAWa,MAAK,SAAUf,GACxB,IAAIW,EAAWX,EAAGW,SACdC,GAAiB,QAAOZ,EAAI,CAAC,cAEjC,OAAaY,GACbJ,EAAeK,QAAUF,EACzBN,GAAY,QAGf,IACI,gBAAoB,aAAsB,CAC/CW,MAAO,CACLL,SAAUH,EAAeK,QACzBT,OAAQA,IAETH,GAGL,SAASM,EAAaL,GACpB,MAA2B,mBAAbA,I,6GC5EZe,GAAe,SAAS,QAAS,CACnCN,SAAU,KACT,KAAa,M,qICShB,EAfe,WACb,OACE,gBAACZ,EAAA,EAAD,CAAYG,SAAUe,KACpB,gBAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,UAAU,kBACVC,eAAe,SACfC,WAAW,UAJb,kDCIN,EANc,kBACZ,gBAAC,IAAD,KACE,gBAAC,EAAD","file":"component---src-pages-resume-js-f8c1481cad79d7fde25f.js","sourcesContent":["import { __read, __rest } from 'tslib';\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.js';\nimport { loadFeatures } from '../../motion/features/definitions.js';\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimations } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimations}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimations')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\n\nfunction LazyMotion(_a) {\n  var children = _a.children,\n      features = _a.features,\n      _b = _a.strict,\n      strict = _b === void 0 ? false : _b;\n\n  var _c = __read(useState(!isLazyBundle(features)), 2),\n      setIsLoaded = _c[1];\n\n  var loadedRenderer = useRef(undefined);\n  /**\n   * If this is a synchronous load, load features immediately\n   */\n\n  if (!isLazyBundle(features)) {\n    var renderer = features.renderer,\n        loadedFeatures = __rest(features, [\"renderer\"]);\n\n    loadedRenderer.current = renderer;\n    loadFeatures(loadedFeatures);\n  }\n\n  useEffect(function () {\n    if (isLazyBundle(features)) {\n      features().then(function (_a) {\n        var renderer = _a.renderer,\n            loadedFeatures = __rest(_a, [\"renderer\"]);\n\n        loadFeatures(loadedFeatures);\n        loadedRenderer.current = renderer;\n        setIsLoaded(true);\n      });\n    }\n  }, []);\n  return React.createElement(LazyContext.Provider, {\n    value: {\n      renderer: loadedRenderer.current,\n      strict: strict\n    }\n  }, children);\n}\n\nfunction isLazyBundle(features) {\n  return typeof features === \"function\";\n}\n\nexport { LazyMotion };","import { __assign } from 'tslib';\nimport { animations } from '../../motion/features/animations.js';\nimport { gestureAnimations } from '../../motion/features/gestures.js';\nimport { createDomVisualElement } from './create-visual-element.js';\n/**\n * @public\n */\n\nvar domAnimation = __assign(__assign({\n  renderer: createDomVisualElement\n}, animations), gestureAnimations);\n\nexport { domAnimation };","import React from \"react\"\nimport { LazyMotion, domAnimation } from \"framer-motion\"\nimport { Box } from \"@material-ui/core\"\n\nconst Resume = () => {\n  return (\n    <LazyMotion features={domAnimation}>\n      <Box\n        display=\"flex\"\n        className=\"box box-default\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        work in progress, will be update soon! üë®‚Äçüíª\n      </Box>\n    </LazyMotion>\n  )\n}\n\nexport default Resume\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Resume from \"../components/resume\"\n\nconst About = () => (\n  <Layout>\n    <Resume />\n  </Layout>\n)\n\nexport default About\n"],"sourceRoot":""}